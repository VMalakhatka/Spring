-- Database: postgres

CREATE TABLE reestr
(
                      id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                      klass VARCHAR(4) NOT NULL CHECK (klass <> ''),
                      first_name VARCHAR(100) NOT NULL CHECK (first_name <> ''),
                      last_name VARCHAR(100) NOT NULL CHECK (last_name <> ''),
                      subject VARCHAR(100) NOT NULL CHECK (subject <> ''),
                      mark INT NOT NULL CHECK (mark > 0),
                      date_of_mark DATE
);

INSERT INTO reestr (klass,first_name, last_name, subject,mark, date_of_mark) values ('3b','Joel', 'Edgerton','History',4, '2024-06-23');
INSERT INTO reestr (klass,first_name, last_name, subject,mark, date_of_mark) values ('3b','Tom', 'Hardy','Mathematics',5,'2024-09-15');
INSERT INTO reestr (klass,first_name, last_name, subject,mark, date_of_mark) values ('4a','Nicholas', 'Nolte','Singing',3, '2024-02-08');



-- 1 Создайте таблицу, хранящую документ, удостоверяющий личность (паспорт), для пользователей.
-- Свяжите таблицу паспортов с таблицей пользователей. Не у всех пользователей в БД может быть
-- указан паспорт, но каждому паспорту соответствует один пользователь. У паспорта должны быть
-- поля id, буквенная или числовая серия и номер. Создайте паспорта для двух пользователей.
-- Выполните запрос на получение информации о пользователях вместе с данными паспортов.
-- 2 Создайте таблицу для хранения адресов доставки товаров пользователя. Свяжите таблицу адресов
-- с таблицей пользователей. У одного пользователя может быть несколько адресов для доставки, но
-- каждый адрес принадлежит только одному пользователю. Выполните запрос на получение информации
-- о пользователях вместе с адресами.

-- CREATE TABLE client_app_statistics(
--                                       id BIGINT NOT NULL,
--                                       client_app_name VARCHAR(100) NOT NULL CHECK (client_app_name <> ''),
--                                       client_app_count INT NOT NULL
-- );
--
-- INSERT INTO client_app_statistics (client_app_name, client_app_count) values ('Chrome browser', 10);
-- UPDATE client_app_statistics SET client_app_count = client_app_count + 1 WHERE client_app_name = 'Chrome browser';